name: Build Vision Pro App (macOS 15, xros2.2)

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: macos-15  # üëà GitHub-hosted macOS 15 runner

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Verify Available Xcode Versions
        run: |
          echo "üîç Checking available Xcode versions..."
          ls /Applications | grep Xcode || echo "‚ö†Ô∏è No Xcode versions found in /Applications"

      - name: Select Xcode 16.2 (Latest VisionOS Support)
        run: |
          echo "üîÑ Switching to Xcode 16.2..."
          sudo xcode-select -s /Applications/Xcode_16.2.app || { 
            echo "‚ùå Failed to switch Xcode version!";
            exit 1;
          }

      - name: Verify Xcode Selection
        run: |
          echo "üìå Currently selected Xcode version:"
          xcode-select -p
          xcodebuild -version

      - name: Check for VisionOS 2.2 SDK
        run: |
          echo "üîé Checking available SDKs..."
          xcodebuild -showsdks
          if ! xcodebuild -showsdks | grep -q "xros2.2"; then
            echo "‚ùå VisionOS 2.2 SDK (xros2.2) not found!";
            echo "üõ†Ô∏è Ensure that GitHub runners have the latest Xcode with VisionOS 2.2.";
            exit 1;
          else
            echo "‚úÖ VisionOS 2.2 SDK (xros2.2) is installed!";
          fi

      - name: Create Vision Pro Xcode Project (Properly)
        run: |
          echo "üõ†Ô∏è Creating Vision Pro Xcode Project..."
          mkdir VisionProApp
          cd VisionProApp

          # Create a new Xcode project using xcodebuild
          xcodebuild -create-project \
            -name VisionProApp \
            -platform visionos \
            -path . || { 
              echo "‚ùå Failed to create Xcode project!";
              exit 1;
            }

          echo "‚úÖ Xcode project created successfully!"

      - name: Create Vision Pro App Files
        run: |
          cd VisionProApp

          # Create main.swift
          mkdir -p VisionProApp
          cat > VisionProApp/main.swift <<EOF
          import SwiftUI
          @main
          struct VisionProApp: App {
              var body: some Scene {
                  WindowGroup {
                      Text("Hello, Vision Pro 2.2!")
                          .padding()
                  }
              }
          }
          EOF

          # Create Info.plist
          cat > VisionProApp/Info.plist <<EOF
          <?xml version="1.0" encoding="UTF-8"?>
          <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
          <plist version="1.0">
          <dict>
              <key>CFBundleIdentifier</key>
              <string>com.example.visionproapp</string>
              <key>CFBundleName</key>
              <string>VisionProApp</string>
              <key>CFBundleVersion</key>
              <string>1.0</string>
              <key>CFBundleShortVersionString</key>
              <string>1.0</string>
              <key>UILaunchStoryboardName</key>
              <string>Main</string>
          </dict>
          </plist>
          EOF

      - name: Verify Project Structure
        run: |
          echo "üìÇ Checking project files..."
          ls -R VisionProApp

      - name: Build Vision Pro App
        run: |
          cd VisionProApp
          echo "üöÄ Starting build process..."
          xcodebuild clean build \
            -project VisionProApp.xcodeproj \
            -scheme VisionProApp \
            -sdk xros2.2 \
            -configuration Debug \
            CODE_SIGN_IDENTITY="" \
            CODE_SIGNING_REQUIRED=NO \
            CODE_SIGNING_ALLOWED=NO \
            | tee build_log.txt || { 
              echo "‚ùå Build failed! See logs below:";
              cat build_log.txt;
              exit 1;
            }

      - name: Archive Vision Pro App
        run: |
          cd VisionProApp
          xcodebuild archive \
            -project VisionProApp.xcodeproj \
            -scheme VisionProApp \
            -sdk xros2.2 \
            -configuration Debug \
            -archivePath build/VisionProApp.xcarchive \
            CODE_SIGN_IDENTITY="" \
            CODE_SIGNING_REQUIRED=NO \
            CODE_SIGNING_ALLOWED=NO

      - name: Export Vision Pro App (Unsigned)
        run: |
          cd VisionProApp
          mkdir -p build/output
          xcodebuild -exportArchive \
            -archivePath build/VisionProApp.xcarchive \
            -exportPath build/output \
            -exportOptionsPlist <(echo '{}') || true

      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: VisionProApp
          path: VisionProApp/build/output
